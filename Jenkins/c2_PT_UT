timestamps {
    node ("$node") {
    sh '''
    whoami
    '''
def build_success = true

try {
    stage ('JOB1 (Caffe2) - Unit tests')
    {
    sh '''
	cd ~/dockerx/MLSEQA_TestRepo/ ; git stash ; git pull https://streamhsa:AH64_uh1@github.com/RadeonOpenCompute/MLSEQA_TestRepo.git
	cd ~/dockerx/MLSEQA_TestRepo/utils; chmod +x install_automation_prerequisites.sh; ./install_automation_prerequisites.sh
	cd ~/dockerx/MLSEQA_TestRepo/Sanity/Unittests_Automation/Pytorch_caffe2; python3.6 pyc2_unittest.py caffe2 $caffe2docker -s
	'''
    }
    }
    
    catch (Exception e) 
	{
    build_success = false
    echo e.toString()
    echo "'JOB1 (Caffe2) - Unit tests' stage failed."
    }
	
try {
    stage ('JOB2 (Caffe2) - Bench tests')
    {
    sh '''
    cd ~/dockerx/MLSEQA_TestRepo/Sanity/Unittests_Automation/Pytorch_caffe2; python3.6 run_caffe2_bench.py $caffe2docker -s
	'''
    }
    } 
    
    catch (Exception e) 
	{
    build_success = false
    echo e.toString()
    echo "'JOB2 (Caffe2) - Bench tests' stage failed."
    }
	
try {
    stage ('JOB3 (Pytorch) - Unit tests')
    {
    sh '''
    cd ~/dockerx/MLSEQA_TestRepo/Sanity/Unittests_Automation/Pytorch_caffe2; python3.6 pyc2_unittest.py pytorch $pytorchdocker -s
	'''
    }
    } 
    
    catch (Exception e) 
	{
    build_success = false
    echo e.toString()
    echo "'JOB3 (Pytorch) - Unit tests' stage failed."
    }

}
}
