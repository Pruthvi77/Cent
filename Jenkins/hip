timestamps {
    node ("$node") {
    sh '''
    whoami
    '''
def build_success = true
try {
    stage ('JOB1 (HIP) - Directed tests')
	{
    sh '''
    cd ~/dockerx/MLSEQA_TestRepo/ ; git stash ; git pull https://github.com/RadeonOpenCompute/MLSEQA_TestRepo.git
    cd ~/dockerx/MLSEQA_TestRepo/utils; chmod +x install_automation_prerequisites.sh; ./install_automation_prerequisites.sh
	cd ~/dockerx/MLSEQA_TestRepo/Sanity/Unittests_Automation/hip; python3 hip_directed.py -m $email
	'''
    }
    }
	
	catch (Exception e) 
	{
    build_success = false
    echo e.toString()
    echo "'JOB1 (HIP) - Directed test' stage failed." 
    }

try {
    stage ('JOB2 (HIP) - samples ')
	{
    sh '''
    cd ~/dockerx/MLSEQA_TestRepo/utils; chmod +x install_automation_prerequisites.sh; ./install_automation_prerequisites.sh
    cd ~/dockerx/MLSEQA_TestRepo/Sanity/Unittests_Automation/hip; python3 hip_samples.py -m $email
	'''
    }
    }
	
	catch (Exception e) 
	{
    build_success = false
    echo e.toString()
    echo "'JOB2 (HIP) - samples' stage failed."
   }	
   
try {
    stage ('JOB3 (HIP) - Examples ')
	{
    sh '''
    cd ~/dockerx/MLSEQA_TestRepo/utils; chmod +x install_automation_prerequisites.sh; ./install_automation_prerequisites.sh	
	cd ~/dockerx/MLSEQA_TestRepo/Sanity/Unittests_Automation/hip ; python3 hip_examples.py -m $email
	'''
    }
    }
	
	catch (Exception e) 
	{
    build_success = false
    echo e.toString()
    echo "'JOB3 (HIP) - Examples' stage failed."
    }	
try {
    stage ('JOB4 (HIP) - Hammer ')
	{
    sh '''
    cd ~/dockerx/MLSEQA_TestRepo/utils ; chmod +x install_automation_prerequisites.sh ; ./install_automation_prerequisites.sh
	cd ~/dockerx/MLSEQA_TestRepo/Sanity/Unittests_Automation/hip ; python3 hip_hammer.py -m $email
	'''
    }
    }
	
	catch (Exception e) 
	{
    build_success = false
    echo e.toString()
    echo "'JOB4 (HIP) - hammer' stage failed."
   }	

try {
    stage ('JOB5 (HIP) - mgpu_bwtest ')
	{
    sh '''
    cd ~/dockerx/MLSEQA_TestRepo/utils; chmod +x install_automation_prerequisites.sh; ./install_automation_prerequisites.sh
    cd ~/dockerx/MLSEQA_TestRepo/Sanity/Unittests_Automation/hip; python3 hip_mgpu_bwtest.py -m $email
	'''
    }
    }
	
	catch (Exception e) 
	{
    build_success = false
    echo e.toString()
    echo "'JOB5 (HIP) - mgpu_bwtest' stage failed."
   }	
   

}
}
